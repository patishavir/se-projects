package oz.utils.ssh;

/* -*-mode:java; c-basic-offset:2; indent-tabs-mode:nil -*- */
import java.io.InputStream;
import java.util.logging.Logger;

import com.jcraft.jsch.Channel;
import com.jcraft.jsch.ChannelExec;
import com.jcraft.jsch.JSch;
import com.jcraft.jsch.Session;

public class Exec {
	private static Logger logger = Logger.getLogger(Exec.class.getName());
	public static void main(String[] arg) {
		try {
			JSch jsch = new JSch();
			String host = "snif-i";
			String user = "root";
			String password = "roma67";
			String command = "hostname";

			Session session = jsch.getSession(user, host, 22);

			/*
			 * String xhost="127.0.0.1"; int xport=0; String
			 * display=JOptionPane.showInputDialog("Enter display name",
			 * xhost+":"+xport); xhost=display.substring(0,
			 * display.indexOf(':'));
			 * xport=Integer.parseInt(display.substring(display
			 * .indexOf(':')+1)); session.setX11Host(xhost);
			 * session.setX11Port(xport+6000);
			 */

			// username and password will be given via UserInfo interface.
			session.connect();

			Channel channel = session.openChannel("exec");
			((ChannelExec) channel).setCommand(command);

			// X Forwarding
			// channel.setXForwarding(true);

			// channel.setInputStream(System.in);
			channel.setInputStream(null);

			// channel.setOutputStream(System.out);

			// FileOutputStream fos=new FileOutputStream("/tmp/stderr");
			// ((ChannelExec)channel).setErrStream(fos);
			((ChannelExec) channel).setErrStream(System.err);

			InputStream in = channel.getInputStream();

			channel.connect();

			byte[] tmp = new byte[1024];
			while (true) {
				while (in.available() > 0) {
					int i = in.read(tmp, 0, 1024);
					if (i < 0)
						break;
					System.out.print(new String(tmp, 0, i));
				}
				if (channel.isClosed()) {
					System.out.println("exit-status: "
							+ channel.getExitStatus());
					break;
				}
				try {
					Thread.sleep(1000);
				} catch (Exception ex) {
					logger.warning(ex.getMessage());
					ex.printStackTrace();
				}
			}
			channel.disconnect();
			session.disconnect();
		} catch (Exception ex) {
			logger.warning(ex.getMessage());
			ex.printStackTrace();
		}
	}

}
